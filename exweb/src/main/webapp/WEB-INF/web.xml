<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
  <display-name>exweb</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.jsp</welcome-file>
    <welcome-file>default.htm</welcome-file>
  </welcome-file-list>
  
  <!-- com.exam.HelloServlet클래스를 Hello라는 이름으로 등록 -->
  <servlet>
  	<servlet-name>Hello</servlet-name>
  	<servlet-class>com.exam.HelloServlet</servlet-class>
  </servlet>
  
  <!-- /hello.do 주소로 요청이 오면 Hello라는 이름의 서블릿클래스를 실행  -->
  <servlet-mapping>
  	<servlet-name>Hello</servlet-name>
  	<url-pattern>/hello.do</url-pattern>
  </servlet-mapping>

  <servlet>
  	<servlet-name>Life</servlet-name>
  	<servlet-class>com.exam.LifeServlet</servlet-class>
  	<init-param>
  	    <param-name>id</param-name>
  	    <param-value>web</param-value>
  	</init-param>
<!-- load-on-startup 값을 0이상의 정수로 설정 : 서버(톰캣) 시작시 서블릿 객체 생성 -->
<!-- 그렇지 않은 경우 : 서버(톰캣)가 필요할 때 서블릿 객체 생성 -->    
  	<load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
  	<servlet-name>Life</servlet-name>
  	<url-pattern>/life.do</url-pattern>
  </servlet-mapping>
  
  <filter>
    <filter-name>encFilter</filter-name>
    <filter-class>com.exam.comm.MyFilter</filter-class>
    <init-param>
    <param-name>enc</param-name>
    <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  
  <filter-mapping>
    <filter-name>encFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <filter>
    <filter-name>loginFilter</filter-name>
    <filter-class>com.exam.comm.LoginFilter</filter-class>    
  </filter>
  
  <filter-mapping>
    <filter-name>loginFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <listener>
    <listener-class>com.exam.comm.MyListener</listener-class>
  </listener>
  
  <!-- 웹 애플리케이션 전체에서 공유하여 사용가능한 데이터를 이름-값 형식으로 저장  -->
  <context-param>
    <param-name>jdbcDriver</param-name>
    <param-value>oracle.jdbc.OracleDriver</param-value>
  </context-param>
  
  <error-page>
    <error-code>404</error-code>
    <location>/WEB-INF/jsp/error/err404.jsp</location>
  </error-page>
  <error-page>
    <error-code>500</error-code>
    <location>/WEB-INF/jsp/error/err500.jsp</location>
  </error-page>
  <error-page>
    <exception-type>java.lang.NullPointerException</exception-type>
    <location>/WEB-INF/jsp/error/errNull.jsp</location>
  </error-page>
  
  
  
</web-app>








